@tailwind base;
@tailwind components;
@tailwind utilities;

@layer utilities {
  /* override the default backdrop filter order that TailwindCSS provides */
  .backdrop-order {
    backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-saturate)
      var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale)
      var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert)
      var(--tw-backdrop-opacity) var(--tw-backdrop-brightness)
      var(--tw-backdrop-sepia);
  }
}

/* FIXME instead of defining this as a reusable TailwindCSS class, this should
 * be defined in a reusable <IconButton> wrapper. However, dealing with TS types
 * wasn't worth it for now; this was a lot easier.
 */
@layer components {
  .icon-button {
    @apply flex h-6 w-6 cursor-pointer items-center justify-center rounded-full text-gray-900/40 transition-colors disabled:cursor-not-allowed dark:text-gray-100/40;
    &:not(:disabled) {
      @apply hover:bg-gray-900/5 hover:text-gray-900 dark:hover:bg-gray-100/5 dark:hover:text-gray-100;
    }
  }
  .frosted {
    @apply backdrop-order dark:backdrop-order bg-white/75 backdrop-blur-md backdrop-brightness-150 backdrop-contrast-50 backdrop-saturate-200 dark:bg-gray-900/75 dark:backdrop-brightness-75 dark:backdrop-contrast-75;
  }
  .underline {
    @apply decoration-1 underline-offset-1;
  }
}

@supports (scrollbar-width: thin) {
  * {
    scrollbar-width: thin;
    scrollbar-color: theme('colors.gray.100') theme('colors.white');
  }

  .light,
  .light * {
    scrollbar-color: theme('colors.gray.100') theme('colors.white');
  }

  .dark,
  .dark * {
    scrollbar-color: theme('colors.gray.800') theme('colors.gray.900');
  }
}
