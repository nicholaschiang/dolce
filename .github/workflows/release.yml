name: Release
on:
  push:
    branches:
      - main
      - '*.x'
  pull_request:
    branches:
      - main
      - '*.x'
  merge_group:
    branches:
      - main
      - '*.x'

defaults:
  run:
    working-directory: ./remix-ui

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  dry-release:
    name: Dry Release
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate-token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.RELEASE_APP_ID }}
          private_key: ${{ secrets.RELEASE_PEM }}

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Get package manager version
        id: get-pnpm-version
        run: echo "version=$(cat package.json | jq -r .packageManager | sed s/pnpm@//)" >> $GITHUB_OUTPUT

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ steps.get-pnpm-version.outputs.version }}

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: remix-ui/package.json
          cache-dependency-path: remix-ui/pnpm-lock.yaml
          cache: pnpm

      - name: Download deps
        run: pnpm install --frozen-lockfile

      - name: Checkout branch
        run: git checkout $GITHUB_HEAD_REF

      - name: Release
        run: unset GITHUB_ACTIONS && pnpm semantic-release --dry-run
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    needs:
      - dry-release
    steps:
      - name: Generate token
        id: generate-token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.RELEASE_APP_ID }}
          private_key: ${{ secrets.RELEASE_PEM }}

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ steps.generate-token.outputs.token }}
      
      - name: Get package manager version
        id: get-pnpm-version
        run: echo "version=$(cat package.json | jq -r .packageManager | sed s/pnpm@//)" >> $GITHUB_OUTPUT

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ steps.get-pnpm-version.outputs.version }}

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: remix-ui/package.json
          cache-dependency-path: remix-ui/pnpm-lock.yaml
          cache: pnpm

      - name: Download deps
        run: pnpm install --frozen-lockfile

      - name: Release
        run: pnpm semantic-release --ci
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
