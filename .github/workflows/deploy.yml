name: Deploy
on:
  push:
    branches:
      - main
      - prod
  pull_request: {}

permissions:
  actions: write
  contents: read

jobs:
  lint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: package.json
          cache: yarn

      - name: Download deps
        run: yarn install --immutable

      # Linting fails in CI because `~/styles/tailwind.css` does not exist and
      # thus my `import/order` rule errors (because it doesn't mark that as a
      # local import as the file doesn't exist). This addresses that.
      - name: Stub imported css
        run: mkdir app/styles && touch app/styles/tailwind.css

      - name: Lint
        run: yarn lint

  typecheck:
    name: TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: package.json
          cache: yarn

      - name: Download deps
        run: yarn install --immutable

      - name: Type check
        run: yarn typecheck

  vitest:
    name: Vitest
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: package.json
          cache: yarn

      - name: Download deps
        run: yarn install --immutable

      - name: Run vitest
        run: yarn test -- --coverage

  cypress:
    name: Cypress
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Copy test env vars
        run: cp .env.example .env

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: package.json
          cache: yarn

      - name: Download deps
        run: yarn install --immutable

      - name: Docker compose
        # the sleep is just there to give time for postgres to get started
        run: docker-compose up -d && sleep 3
        env:
          DATABASE_URL: 'postgresql://postgres:postgres@localhost:5432/postgres'

      - name: Setup database
        run: yarn prisma migrate reset --force

      - name: Build
        run: yarn build

      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          start: yarn start:mocks
          wait-on: 'http://localhost:8811'
          record: true
        env:
          PORT: '8811'
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build
    # only build/deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/prod') && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Read app name
        uses: SebRollen/toml-action@v1.0.2
        id: app_name
        with:
          file: 'fly.toml'
          field: 'app'

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v2

      # Setup cache
      - name: Cache docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Fly registry auth
        uses: docker/login-action@v2
        with:
          registry: registry.fly.io
          username: x
          password: ${{ secrets.FLY_API_TOKEN }}

      - name: Docker build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}
          build-args: |
            COMMIT_SHA=${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [lint, typecheck, vitest, cypress, build]
    # only build/deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/prod') && github.event_name == 'push' }}

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Read app name
        uses: SebRollen/toml-action@v1.0.2
        id: app_name
        with:
          file: 'fly.toml'
          field: 'app'

      - name: Deploy staging
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: superfly/flyctl-actions@1.3
        with:
          args: 'deploy --app ${{ steps.app_name.outputs.value }}-staging --image registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}'
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Deploy production
        if: ${{ github.ref == 'refs/heads/prod' }}
        uses: superfly/flyctl-actions@1.3
        with:
          args: 'deploy --image registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}'
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
